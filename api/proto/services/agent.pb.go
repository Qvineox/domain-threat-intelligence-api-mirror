// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: agent.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// every JobType has its own assigned directives
type JobType int32

const (
	JobType_JOB_TYPE_OSS       JobType = 0
	JobType_JOB_TYPE_NMAP      JobType = 1
	JobType_JOB_TYPE_WHOIS     JobType = 2
	JobType_JOB_TYPE_DNS       JobType = 3
	JobType_JOB_TYPE_DISCOVERY JobType = 4
	JobType_JOB_TYPE_SPIDER    JobType = 5
)

// Enum value maps for JobType.
var (
	JobType_name = map[int32]string{
		0: "JOB_TYPE_OSS",
		1: "JOB_TYPE_NMAP",
		2: "JOB_TYPE_WHOIS",
		3: "JOB_TYPE_DNS",
		4: "JOB_TYPE_DISCOVERY",
		5: "JOB_TYPE_SPIDER",
	}
	JobType_value = map[string]int32{
		"JOB_TYPE_OSS":       0,
		"JOB_TYPE_NMAP":      1,
		"JOB_TYPE_WHOIS":     2,
		"JOB_TYPE_DNS":       3,
		"JOB_TYPE_DISCOVERY": 4,
		"JOB_TYPE_SPIDER":    5,
	}
)

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}

func (x JobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[0].Descriptor()
}

func (JobType) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[0]
}

func (x JobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobType.Descriptor instead.
func (JobType) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

type JobPriority int32

const (
	JobPriority_JOB_PRIORITY_LOW      JobPriority = 0 // job should be executed lastly in order (queue mode)
	JobPriority_JOB_PRIORITY_MEDIUM   JobPriority = 1 // job should be executed with higher priority
	JobPriority_JOB_PRIORITY_HIGH     JobPriority = 2 // job must be executed after current (stack mode)
	JobPriority_JOB_PRIORITY_CRITICAL JobPriority = 3 // job must be executed instantly
)

// Enum value maps for JobPriority.
var (
	JobPriority_name = map[int32]string{
		0: "JOB_PRIORITY_LOW",
		1: "JOB_PRIORITY_MEDIUM",
		2: "JOB_PRIORITY_HIGH",
		3: "JOB_PRIORITY_CRITICAL",
	}
	JobPriority_value = map[string]int32{
		"JOB_PRIORITY_LOW":      0,
		"JOB_PRIORITY_MEDIUM":   1,
		"JOB_PRIORITY_HIGH":     2,
		"JOB_PRIORITY_CRITICAL": 3,
	}
)

func (x JobPriority) Enum() *JobPriority {
	p := new(JobPriority)
	*p = x
	return p
}

func (x JobPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[1].Descriptor()
}

func (JobPriority) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[1]
}

func (x JobPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobPriority.Descriptor instead.
func (JobPriority) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

type OSSProvider int32

const (
	OSSProvider_OSS_PROVIDER_VIRUS_TOTAL      OSSProvider = 0
	OSSProvider_OSS_PROVIDER_IP_QUALITY_SCORE OSSProvider = 1
	OSSProvider_OSS_PROVIDER_CROWD_SEC        OSSProvider = 2
	OSSProvider_OSS_PROVIDER_SHODAN           OSSProvider = 3
	OSSProvider_OSS_PROVIDER_IP_WHO_IS        OSSProvider = 4
)

// Enum value maps for OSSProvider.
var (
	OSSProvider_name = map[int32]string{
		0: "OSS_PROVIDER_VIRUS_TOTAL",
		1: "OSS_PROVIDER_IP_QUALITY_SCORE",
		2: "OSS_PROVIDER_CROWD_SEC",
		3: "OSS_PROVIDER_SHODAN",
		4: "OSS_PROVIDER_IP_WHO_IS",
	}
	OSSProvider_value = map[string]int32{
		"OSS_PROVIDER_VIRUS_TOTAL":      0,
		"OSS_PROVIDER_IP_QUALITY_SCORE": 1,
		"OSS_PROVIDER_CROWD_SEC":        2,
		"OSS_PROVIDER_SHODAN":           3,
		"OSS_PROVIDER_IP_WHO_IS":        4,
	}
)

func (x OSSProvider) Enum() *OSSProvider {
	p := new(OSSProvider)
	*p = x
	return p
}

func (x OSSProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OSSProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[2].Descriptor()
}

func (OSSProvider) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[2]
}

func (x OSSProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OSSProvider.Descriptor instead.
func (OSSProvider) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

type PayloadType int32

const (
	PayloadType_PAYLOAD_TYPE_TARGET  PayloadType = 0
	PayloadType_PAYLOAD_TYPE_TARGETS PayloadType = 1
	PayloadType_PAYLOAD_TYPE_SUBNET  PayloadType = 2
)

// Enum value maps for PayloadType.
var (
	PayloadType_name = map[int32]string{
		0: "PAYLOAD_TYPE_TARGET",
		1: "PAYLOAD_TYPE_TARGETS",
		2: "PAYLOAD_TYPE_SUBNET",
	}
	PayloadType_value = map[string]int32{
		"PAYLOAD_TYPE_TARGET":  0,
		"PAYLOAD_TYPE_TARGETS": 1,
		"PAYLOAD_TYPE_SUBNET":  2,
	}
)

func (x PayloadType) Enum() *PayloadType {
	p := new(PayloadType)
	*p = x
	return p
}

func (x PayloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[3].Descriptor()
}

func (PayloadType) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[3]
}

func (x PayloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadType.Descriptor instead.
func (PayloadType) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

type HostType int32

const (
	HostType_HOST_TYPE_CIDR   HostType = 0 // or IP address
	HostType_HOST_TYPE_DOMAIN HostType = 1
	HostType_HOST_TYPE_URL    HostType = 2
	HostType_HOST_TYPE_EMAIL  HostType = 3
)

// Enum value maps for HostType.
var (
	HostType_name = map[int32]string{
		0: "HOST_TYPE_CIDR",
		1: "HOST_TYPE_DOMAIN",
		2: "HOST_TYPE_URL",
		3: "HOST_TYPE_EMAIL",
	}
	HostType_value = map[string]int32{
		"HOST_TYPE_CIDR":   0,
		"HOST_TYPE_DOMAIN": 1,
		"HOST_TYPE_URL":    2,
		"HOST_TYPE_EMAIL":  3,
	}
)

func (x HostType) Enum() *HostType {
	p := new(HostType)
	*p = x
	return p
}

func (x HostType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[4].Descriptor()
}

func (HostType) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[4]
}

func (x HostType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostType.Descriptor instead.
func (HostType) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

type SecurityToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityToken string `protobuf:"bytes,1,opt,name=securityToken,proto3" json:"securityToken,omitempty"` // encoded token for access validation
}

func (x *SecurityToken) Reset() {
	*x = SecurityToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityToken) ProtoMessage() {}

func (x *SecurityToken) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityToken.ProtoReflect.Descriptor instead.
func (*SecurityToken) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *SecurityToken) GetSecurityToken() string {
	if x != nil {
		return x.SecurityToken
	}
	return ""
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"` // job metadata and identity
	// describes job parameters and settings, corresponds to meta.type
	//
	// Types that are assignable to Directives:
	//
	//	*Job_Oss
	//	*Job_Nmap
	//	*Job_Whois
	//	*Job_Dns
	//	*Job_Discovery
	//	*Job_Spider
	Directives isJob_Directives `protobuf_oneof:"directives"`
	Payload    *Payload         `protobuf:"bytes,8,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (m *Job) GetDirectives() isJob_Directives {
	if m != nil {
		return m.Directives
	}
	return nil
}

func (x *Job) GetOss() *OSSScanDirectives {
	if x, ok := x.GetDirectives().(*Job_Oss); ok {
		return x.Oss
	}
	return nil
}

func (x *Job) GetNmap() *NMAPDirectives {
	if x, ok := x.GetDirectives().(*Job_Nmap); ok {
		return x.Nmap
	}
	return nil
}

func (x *Job) GetWhois() *WhoIsDirectives {
	if x, ok := x.GetDirectives().(*Job_Whois); ok {
		return x.Whois
	}
	return nil
}

func (x *Job) GetDns() *DNSDirectives {
	if x, ok := x.GetDirectives().(*Job_Dns); ok {
		return x.Dns
	}
	return nil
}

func (x *Job) GetDiscovery() *DiscoveryDirectives {
	if x, ok := x.GetDirectives().(*Job_Discovery); ok {
		return x.Discovery
	}
	return nil
}

func (x *Job) GetSpider() *SpiderDirectives {
	if x, ok := x.GetDirectives().(*Job_Spider); ok {
		return x.Spider
	}
	return nil
}

func (x *Job) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type isJob_Directives interface {
	isJob_Directives()
}

type Job_Oss struct {
	Oss *OSSScanDirectives `protobuf:"bytes,2,opt,name=oss,proto3,oneof"`
}

type Job_Nmap struct {
	Nmap *NMAPDirectives `protobuf:"bytes,3,opt,name=nmap,proto3,oneof"`
}

type Job_Whois struct {
	Whois *WhoIsDirectives `protobuf:"bytes,4,opt,name=whois,proto3,oneof"`
}

type Job_Dns struct {
	Dns *DNSDirectives `protobuf:"bytes,5,opt,name=dns,proto3,oneof"`
}

type Job_Discovery struct {
	Discovery *DiscoveryDirectives `protobuf:"bytes,6,opt,name=discovery,proto3,oneof"`
}

type Job_Spider struct {
	Spider *SpiderDirectives `protobuf:"bytes,7,opt,name=spider,proto3,oneof"`
}

func (*Job_Oss) isJob_Directives() {}

func (*Job_Nmap) isJob_Directives() {}

func (*Job_Whois) isJob_Directives() {}

func (*Job_Dns) isJob_Directives() {}

func (*Job_Discovery) isJob_Directives() {}

func (*Job_Spider) isJob_Directives() {}

type JobTermination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Force bool   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *JobTermination) Reset() {
	*x = JobTermination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobTermination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobTermination) ProtoMessage() {}

func (x *JobTermination) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobTermination.ProtoReflect.Descriptor instead.
func (*JobTermination) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *JobTermination) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *JobTermination) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type Queue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *Queue) Reset() {
	*x = Queue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queue) ProtoMessage() {}

func (x *Queue) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queue.ProtoReflect.Descriptor instead.
func (*Queue) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *Queue) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type QueueStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBusy         bool   `protobuf:"varint,1,opt,name=isBusy,proto3" json:"isBusy,omitempty"`
	AcceptsNewJobs bool   `protobuf:"varint,2,opt,name=acceptsNewJobs,proto3" json:"acceptsNewJobs,omitempty"`
	JobsInQueue    uint64 `protobuf:"varint,3,opt,name=jobsInQueue,proto3" json:"jobsInQueue,omitempty"`
}

func (x *QueueStatus) Reset() {
	*x = QueueStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStatus) ProtoMessage() {}

func (x *QueueStatus) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueStatus.ProtoReflect.Descriptor instead.
func (*QueueStatus) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

func (x *QueueStatus) GetIsBusy() bool {
	if x != nil {
		return x.IsBusy
	}
	return false
}

func (x *QueueStatus) GetAcceptsNewJobs() bool {
	if x != nil {
		return x.AcceptsNewJobs
	}
	return false
}

func (x *QueueStatus) GetJobsInQueue() uint64 {
	if x != nil {
		return x.JobsInQueue
	}
	return 0
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type     JobType     `protobuf:"varint,3,opt,name=type,proto3,enum=contracts.JobType" json:"type,omitempty"`
	Email    string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Priority JobPriority `protobuf:"varint,5,opt,name=priority,proto3,enum=contracts.JobPriority" json:"priority,omitempty"`
	Weight   int64       `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"` // helps to determine job resource consumption
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{5}
}

func (x *Meta) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Meta) GetType() JobType {
	if x != nil {
		return x.Type
	}
	return JobType_JOB_TYPE_OSS
}

func (x *Meta) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Meta) GetPriority() JobPriority {
	if x != nil {
		return x.Priority
	}
	return JobPriority_JOB_PRIORITY_LOW
}

func (x *Meta) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

// scanning using public service APIs, i.e VirusTotal, CrowdSec, IPQS and others
type OSSScanDirectives struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers []OSSProvider `protobuf:"varint,1,rep,packed,name=providers,proto3,enum=contracts.OSSProvider" json:"providers,omitempty"`
	Timings   *Timings      `protobuf:"bytes,9,opt,name=timings,proto3" json:"timings,omitempty"`
}

func (x *OSSScanDirectives) Reset() {
	*x = OSSScanDirectives{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSSScanDirectives) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSSScanDirectives) ProtoMessage() {}

func (x *OSSScanDirectives) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSSScanDirectives.ProtoReflect.Descriptor instead.
func (*OSSScanDirectives) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{6}
}

func (x *OSSScanDirectives) GetProviders() []OSSProvider {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *OSSScanDirectives) GetTimings() *Timings {
	if x != nil {
		return x.Timings
	}
	return nil
}

// scanning using NMAP binding
type NMAPDirectives struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timings *Timings `protobuf:"bytes,9,opt,name=timings,proto3" json:"timings,omitempty"`
}

func (x *NMAPDirectives) Reset() {
	*x = NMAPDirectives{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NMAPDirectives) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NMAPDirectives) ProtoMessage() {}

func (x *NMAPDirectives) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NMAPDirectives.ProtoReflect.Descriptor instead.
func (*NMAPDirectives) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{7}
}

func (x *NMAPDirectives) GetTimings() *Timings {
	if x != nil {
		return x.Timings
	}
	return nil
}

// query WhoIS servers
type WhoIsDirectives struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timings *Timings `protobuf:"bytes,9,opt,name=timings,proto3" json:"timings,omitempty"`
}

func (x *WhoIsDirectives) Reset() {
	*x = WhoIsDirectives{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoIsDirectives) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoIsDirectives) ProtoMessage() {}

func (x *WhoIsDirectives) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoIsDirectives.ProtoReflect.Descriptor instead.
func (*WhoIsDirectives) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{8}
}

func (x *WhoIsDirectives) GetTimings() *Timings {
	if x != nil {
		return x.Timings
	}
	return nil
}

// query DNS servers
type DNSDirectives struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timings *Timings `protobuf:"bytes,9,opt,name=timings,proto3" json:"timings,omitempty"`
}

func (x *DNSDirectives) Reset() {
	*x = DNSDirectives{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSDirectives) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSDirectives) ProtoMessage() {}

func (x *DNSDirectives) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSDirectives.ProtoReflect.Descriptor instead.
func (*DNSDirectives) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{9}
}

func (x *DNSDirectives) GetTimings() *Timings {
	if x != nil {
		return x.Timings
	}
	return nil
}

// discover hosts with designated targets (must provide subnet/CIDR)
type DiscoveryDirectives struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ports   []int64  `protobuf:"varint,1,rep,packed,name=ports,proto3" json:"ports,omitempty"` // which ports should be checked for response, see IANA ports
	Silent  bool     `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	Timings *Timings `protobuf:"bytes,9,opt,name=timings,proto3" json:"timings,omitempty"`
}

func (x *DiscoveryDirectives) Reset() {
	*x = DiscoveryDirectives{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryDirectives) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryDirectives) ProtoMessage() {}

func (x *DiscoveryDirectives) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryDirectives.ProtoReflect.Descriptor instead.
func (*DiscoveryDirectives) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{10}
}

func (x *DiscoveryDirectives) GetPorts() []int64 {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *DiscoveryDirectives) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

func (x *DiscoveryDirectives) GetTimings() *Timings {
	if x != nil {
		return x.Timings
	}
	return nil
}

// start spider host discovery
type SpiderDirectives struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depth   int64    `protobuf:"varint,1,opt,name=depth,proto3" json:"depth,omitempty"` // describes max amount of hops in depth
	Timings *Timings `protobuf:"bytes,9,opt,name=timings,proto3" json:"timings,omitempty"`
}

func (x *SpiderDirectives) Reset() {
	*x = SpiderDirectives{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiderDirectives) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiderDirectives) ProtoMessage() {}

func (x *SpiderDirectives) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiderDirectives.ProtoReflect.Descriptor instead.
func (*SpiderDirectives) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{11}
}

func (x *SpiderDirectives) GetDepth() int64 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *SpiderDirectives) GetTimings() *Timings {
	if x != nil {
		return x.Timings
	}
	return nil
}

type Timings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timeout uint64 `protobuf:"varint,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Delay   uint64 `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
	Retries uint64 `protobuf:"varint,3,opt,name=retries,proto3" json:"retries,omitempty"`
}

func (x *Timings) Reset() {
	*x = Timings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timings) ProtoMessage() {}

func (x *Timings) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timings.ProtoReflect.Descriptor instead.
func (*Timings) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{12}
}

func (x *Timings) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Timings) GetDelay() uint64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *Timings) GetRetries() uint64 {
	if x != nil {
		return x.Retries
	}
	return 0
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type PayloadType `protobuf:"varint,1,opt,name=type,proto3,enum=contracts.PayloadType" json:"type,omitempty"`
	// the body of the Payload may differ depending on the type of payload
	//
	// Types that are assignable to Body:
	//
	//	*Payload_Target
	//	*Payload_Targets
	//	*Payload_Subnet
	Body isPayload_Body `protobuf_oneof:"body"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{13}
}

func (x *Payload) GetType() PayloadType {
	if x != nil {
		return x.Type
	}
	return PayloadType_PAYLOAD_TYPE_TARGET
}

func (m *Payload) GetBody() isPayload_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Payload) GetTarget() *TargetPayload {
	if x, ok := x.GetBody().(*Payload_Target); ok {
		return x.Target
	}
	return nil
}

func (x *Payload) GetTargets() *TargetsPayload {
	if x, ok := x.GetBody().(*Payload_Targets); ok {
		return x.Targets
	}
	return nil
}

func (x *Payload) GetSubnet() *SubnetPayload {
	if x, ok := x.GetBody().(*Payload_Subnet); ok {
		return x.Subnet
	}
	return nil
}

type isPayload_Body interface {
	isPayload_Body()
}

type Payload_Target struct {
	Target *TargetPayload `protobuf:"bytes,2,opt,name=target,proto3,oneof"`
}

type Payload_Targets struct {
	Targets *TargetsPayload `protobuf:"bytes,3,opt,name=targets,proto3,oneof"`
}

type Payload_Subnet struct {
	Subnet *SubnetPayload `protobuf:"bytes,4,opt,name=subnet,proto3,oneof"`
}

func (*Payload_Target) isPayload_Body() {}

func (*Payload_Targets) isPayload_Body() {}

func (*Payload_Subnet) isPayload_Body() {}

// TargetPayload describes single target
type TargetPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string    `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Type *HostType `protobuf:"varint,2,opt,name=type,proto3,enum=contracts.HostType,oneof" json:"type,omitempty"`
}

func (x *TargetPayload) Reset() {
	*x = TargetPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetPayload) ProtoMessage() {}

func (x *TargetPayload) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetPayload.ProtoReflect.Descriptor instead.
func (*TargetPayload) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{14}
}

func (x *TargetPayload) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TargetPayload) GetType() HostType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return HostType_HOST_TYPE_CIDR
}

type TargetsPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []*TargetPayload `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *TargetsPayload) Reset() {
	*x = TargetsPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetsPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetsPayload) ProtoMessage() {}

func (x *TargetsPayload) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetsPayload.ProtoReflect.Descriptor instead.
func (*TargetsPayload) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{15}
}

func (x *TargetsPayload) GetTargets() []*TargetPayload {
	if x != nil {
		return x.Targets
	}
	return nil
}

type SubnetPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr       string   `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Exceptions []string `protobuf:"bytes,2,rep,name=exceptions,proto3" json:"exceptions,omitempty"`
}

func (x *SubnetPayload) Reset() {
	*x = SubnetPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubnetPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubnetPayload) ProtoMessage() {}

func (x *SubnetPayload) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubnetPayload.ProtoReflect.Descriptor instead.
func (*SubnetPayload) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{16}
}

func (x *SubnetPayload) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *SubnetPayload) GetExceptions() []string {
	if x != nil {
		return x.Exceptions
	}
	return nil
}

type HostAuditReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobUUID string `protobuf:"bytes,1,opt,name=jobUUID,proto3" json:"jobUUID,omitempty"`
}

func (x *HostAuditReport) Reset() {
	*x = HostAuditReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAuditReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAuditReport) ProtoMessage() {}

func (x *HostAuditReport) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAuditReport.ProtoReflect.Descriptor instead.
func (*HostAuditReport) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{17}
}

func (x *HostAuditReport) GetJobUUID() string {
	if x != nil {
		return x.JobUUID
	}
	return ""
}

type AgentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys        []*ProviderAPIKey `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	MinPriority JobPriority       `protobuf:"varint,2,opt,name=minPriority,proto3,enum=contracts.JobPriority" json:"minPriority,omitempty"`
}

func (x *AgentConfig) Reset() {
	*x = AgentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfig) ProtoMessage() {}

func (x *AgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfig.ProtoReflect.Descriptor instead.
func (*AgentConfig) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{18}
}

func (x *AgentConfig) GetKeys() []*ProviderAPIKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *AgentConfig) GetMinPriority() JobPriority {
	if x != nil {
		return x.MinPriority
	}
	return JobPriority_JOB_PRIORITY_LOW
}

type ProviderAPIKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider OSSProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=contracts.OSSProvider" json:"provider,omitempty"`
	APIKey   string      `protobuf:"bytes,2,opt,name=APIKey,proto3" json:"APIKey,omitempty"`
}

func (x *ProviderAPIKey) Reset() {
	*x = ProviderAPIKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderAPIKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderAPIKey) ProtoMessage() {}

func (x *ProviderAPIKey) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderAPIKey.ProtoReflect.Descriptor instead.
func (*ProviderAPIKey) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{19}
}

func (x *ProviderAPIKey) GetProvider() OSSProvider {
	if x != nil {
		return x.Provider
	}
	return OSSProvider_OSS_PROVIDER_VIRUS_TOTAL
}

func (x *ProviderAPIKey) GetAPIKey() string {
	if x != nil {
		return x.APIKey
	}
	return ""
}

type None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *None) Reset() {
	*x = None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*None) ProtoMessage() {}

func (x *None) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use None.ProtoReflect.Descriptor instead.
func (*None) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{20}
}

var File_agent_proto protoreflect.FileDescriptor

var file_agent_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xb3, 0x03, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x03,
	0x6f, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x53, 0x53, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x73, 0x73, 0x12, 0x2f,
	0x0a, 0x04, 0x6e, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x4d, 0x41, 0x50, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6d, 0x61, 0x70, 0x12,
	0x32, 0x0a, 0x05, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x57, 0x68, 0x6f, 0x49, 0x73,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x48, 0x00, 0x52, 0x05, 0x77, 0x68,
	0x6f, 0x69, 0x73, 0x12, 0x2c, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x4e, 0x53,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x48, 0x00, 0x52, 0x03, 0x64, 0x6e,
	0x73, 0x12, 0x3e, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x70,
	0x69, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x01, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x3a, 0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x22, 0x2b, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6a, 0x6f,
	0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x6f,
	0x0a, 0x0b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x42, 0x75, 0x73, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x42, 0x75, 0x73, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73,
	0x4e, 0x65, 0x77, 0x4a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x4e, 0x65, 0x77, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x6a, 0x6f, 0x62, 0x73, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x73, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x22,
	0xa4, 0x01, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x77, 0x0a, 0x11, 0x4f, 0x53, 0x53, 0x53, 0x63, 0x61,
	0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x53, 0x53, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x3e, 0x0a, 0x0e, 0x4e, 0x4d, 0x41, 0x50, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x3f, 0x0a, 0x0f, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x3d, 0x0a, 0x0d, 0x44, 0x4e, 0x53, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x71, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x69,
	0x6c, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x56, 0x0a, 0x10, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x53, 0x0a, 0x07, 0x54, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22,
	0xdc, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x48, 0x00, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x5a,
	0x0a, 0x0d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x0e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x07,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x22, 0x43, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x55, 0x55,
	0x49, 0x44, 0x22, 0x76, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2d, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x5c, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x53, 0x53, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x22, 0x06, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65,
	0x2a, 0x81, 0x01, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x4a, 0x4f, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x53, 0x53, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x4a, 0x4f, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4d, 0x41, 0x50, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x4f, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x48,
	0x4f, 0x49, 0x53, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x42, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x4e, 0x53, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x4a, 0x4f, 0x42, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x10, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x4a, 0x4f, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x50, 0x49, 0x44,
	0x45, 0x52, 0x10, 0x05, 0x2a, 0x6e, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4a, 0x4f, 0x42,
	0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x4a, 0x4f, 0x42,
	0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43,
	0x41, 0x4c, 0x10, 0x03, 0x2a, 0x9f, 0x01, 0x0a, 0x0b, 0x4f, 0x53, 0x53, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x44, 0x45, 0x52, 0x5f, 0x56, 0x49, 0x52, 0x55, 0x53, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44,
	0x45, 0x52, 0x5f, 0x49, 0x50, 0x5f, 0x51, 0x55, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43,
	0x4f, 0x52, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x4f, 0x57, 0x44, 0x5f, 0x53, 0x45, 0x43, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45,
	0x52, 0x5f, 0x53, 0x48, 0x4f, 0x44, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x53,
	0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x50, 0x5f, 0x57, 0x48,
	0x4f, 0x5f, 0x49, 0x53, 0x10, 0x04, 0x2a, 0x59, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x18,
	0x0a, 0x14, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x41, 0x52, 0x47, 0x45, 0x54, 0x53, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x59, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x10,
	0x02, 0x2a, 0x5c, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x0e, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x49, 0x44, 0x52, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x4f, 0x53, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x48, 0x4f,
	0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x03, 0x32,
	0x49, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a,
	0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xf0, 0x01, 0x0a, 0x04, 0x4a,
	0x6f, 0x62, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x12,
	0x0e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x1a,
	0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x30, 0x01, 0x12, 0x3a, 0x0a,
	0x0c, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x19, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x10, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x3e, 0x0a,
	0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x89, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3d, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39,
	0x0a, 0x0e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x6f, 0x6e,
	0x65, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x33, 0x5a, 0x31, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6c,
	0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData = file_agent_proto_rawDesc
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_agent_proto_rawDescData)
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_agent_proto_goTypes = []interface{}{
	(JobType)(0),                // 0: contracts.JobType
	(JobPriority)(0),            // 1: contracts.JobPriority
	(OSSProvider)(0),            // 2: contracts.OSSProvider
	(PayloadType)(0),            // 3: contracts.PayloadType
	(HostType)(0),               // 4: contracts.HostType
	(*SecurityToken)(nil),       // 5: contracts.SecurityToken
	(*Job)(nil),                 // 6: contracts.Job
	(*JobTermination)(nil),      // 7: contracts.JobTermination
	(*Queue)(nil),               // 8: contracts.Queue
	(*QueueStatus)(nil),         // 9: contracts.QueueStatus
	(*Meta)(nil),                // 10: contracts.Meta
	(*OSSScanDirectives)(nil),   // 11: contracts.OSSScanDirectives
	(*NMAPDirectives)(nil),      // 12: contracts.NMAPDirectives
	(*WhoIsDirectives)(nil),     // 13: contracts.WhoIsDirectives
	(*DNSDirectives)(nil),       // 14: contracts.DNSDirectives
	(*DiscoveryDirectives)(nil), // 15: contracts.DiscoveryDirectives
	(*SpiderDirectives)(nil),    // 16: contracts.SpiderDirectives
	(*Timings)(nil),             // 17: contracts.Timings
	(*Payload)(nil),             // 18: contracts.Payload
	(*TargetPayload)(nil),       // 19: contracts.TargetPayload
	(*TargetsPayload)(nil),      // 20: contracts.TargetsPayload
	(*SubnetPayload)(nil),       // 21: contracts.SubnetPayload
	(*HostAuditReport)(nil),     // 22: contracts.HostAuditReport
	(*AgentConfig)(nil),         // 23: contracts.AgentConfig
	(*ProviderAPIKey)(nil),      // 24: contracts.ProviderAPIKey
	(*None)(nil),                // 25: contracts.None
}
var file_agent_proto_depIdxs = []int32{
	10, // 0: contracts.Job.meta:type_name -> contracts.Meta
	11, // 1: contracts.Job.oss:type_name -> contracts.OSSScanDirectives
	12, // 2: contracts.Job.nmap:type_name -> contracts.NMAPDirectives
	13, // 3: contracts.Job.whois:type_name -> contracts.WhoIsDirectives
	14, // 4: contracts.Job.dns:type_name -> contracts.DNSDirectives
	15, // 5: contracts.Job.discovery:type_name -> contracts.DiscoveryDirectives
	16, // 6: contracts.Job.spider:type_name -> contracts.SpiderDirectives
	18, // 7: contracts.Job.payload:type_name -> contracts.Payload
	6,  // 8: contracts.Queue.jobs:type_name -> contracts.Job
	0,  // 9: contracts.Meta.type:type_name -> contracts.JobType
	1,  // 10: contracts.Meta.priority:type_name -> contracts.JobPriority
	2,  // 11: contracts.OSSScanDirectives.providers:type_name -> contracts.OSSProvider
	17, // 12: contracts.OSSScanDirectives.timings:type_name -> contracts.Timings
	17, // 13: contracts.NMAPDirectives.timings:type_name -> contracts.Timings
	17, // 14: contracts.WhoIsDirectives.timings:type_name -> contracts.Timings
	17, // 15: contracts.DNSDirectives.timings:type_name -> contracts.Timings
	17, // 16: contracts.DiscoveryDirectives.timings:type_name -> contracts.Timings
	17, // 17: contracts.SpiderDirectives.timings:type_name -> contracts.Timings
	3,  // 18: contracts.Payload.type:type_name -> contracts.PayloadType
	19, // 19: contracts.Payload.target:type_name -> contracts.TargetPayload
	20, // 20: contracts.Payload.targets:type_name -> contracts.TargetsPayload
	21, // 21: contracts.Payload.subnet:type_name -> contracts.SubnetPayload
	4,  // 22: contracts.TargetPayload.type:type_name -> contracts.HostType
	19, // 23: contracts.TargetsPayload.targets:type_name -> contracts.TargetPayload
	24, // 24: contracts.AgentConfig.keys:type_name -> contracts.ProviderAPIKey
	1,  // 25: contracts.AgentConfig.minPriority:type_name -> contracts.JobPriority
	2,  // 26: contracts.ProviderAPIKey.provider:type_name -> contracts.OSSProvider
	5,  // 27: contracts.Connection.Hello:input_type -> contracts.SecurityToken
	6,  // 28: contracts.Jobs.StartJob:input_type -> contracts.Job
	7,  // 29: contracts.Jobs.TerminateJob:input_type -> contracts.JobTermination
	25, // 30: contracts.Jobs.RetrieveQueue:input_type -> contracts.None
	25, // 31: contracts.Jobs.RetrieveQueueStatus:input_type -> contracts.None
	23, // 32: contracts.Configuration.Reconfigure:input_type -> contracts.AgentConfig
	25, // 33: contracts.Configuration.RetrieveConfig:input_type -> contracts.None
	5,  // 34: contracts.Connection.Hello:output_type -> contracts.SecurityToken
	22, // 35: contracts.Jobs.StartJob:output_type -> contracts.HostAuditReport
	25, // 36: contracts.Jobs.TerminateJob:output_type -> contracts.None
	8,  // 37: contracts.Jobs.RetrieveQueue:output_type -> contracts.Queue
	9,  // 38: contracts.Jobs.RetrieveQueueStatus:output_type -> contracts.QueueStatus
	23, // 39: contracts.Configuration.Reconfigure:output_type -> contracts.AgentConfig
	23, // 40: contracts.Configuration.RetrieveConfig:output_type -> contracts.AgentConfig
	34, // [34:41] is the sub-list for method output_type
	27, // [27:34] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobTermination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSSScanDirectives); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NMAPDirectives); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoIsDirectives); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSDirectives); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryDirectives); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpiderDirectives); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetsPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubnetPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAuditReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderAPIKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_agent_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Job_Oss)(nil),
		(*Job_Nmap)(nil),
		(*Job_Whois)(nil),
		(*Job_Dns)(nil),
		(*Job_Discovery)(nil),
		(*Job_Spider)(nil),
	}
	file_agent_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*Payload_Target)(nil),
		(*Payload_Targets)(nil),
		(*Payload_Subnet)(nil),
	}
	file_agent_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agent_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		EnumInfos:         file_agent_proto_enumTypes,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_rawDesc = nil
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}
